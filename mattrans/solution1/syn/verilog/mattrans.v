// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mattrans_mattrans,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.508000,HLS_SYN_LAT=259,HLS_SYN_TPT=260,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=171,HLS_SYN_LUT=2353,HLS_VERSION=2022_2}" *)

module mattrans (
        A_address0,
        A_ce0,
        A_d0,
        A_q0,
        A_we0,
        A_address1,
        A_ce1,
        A_d1,
        A_q1,
        A_we1,
        B_address0,
        B_ce0,
        B_d0,
        B_q0,
        B_we0,
        B_address1,
        B_ce1,
        B_d1,
        B_q1,
        B_we1,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


output  [7:0] A_address0;
output   A_ce0;
output  [31:0] A_d0;
input  [31:0] A_q0;
output   A_we0;
output  [7:0] A_address1;
output   A_ce1;
output  [31:0] A_d1;
input  [31:0] A_q1;
output   A_we1;
output  [7:0] B_address0;
output   B_ce0;
output  [31:0] B_d0;
input  [31:0] B_q0;
output   B_we0;
output  [7:0] B_address1;
output   B_ce1;
output  [31:0] B_d1;
input  [31:0] B_q1;
output   B_we1;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire    transposeMatrix_U0_ap_start;
wire    transposeMatrix_U0_ap_done;
wire    transposeMatrix_U0_ap_continue;
wire    transposeMatrix_U0_ap_idle;
wire    transposeMatrix_U0_ap_ready;
wire   [7:0] transposeMatrix_U0_B_address0;
wire    transposeMatrix_U0_B_ce0;
wire    transposeMatrix_U0_B_we0;
wire   [31:0] transposeMatrix_U0_B_d0;
wire   [7:0] transposeMatrix_U0_B_address1;
wire    transposeMatrix_U0_B_ce1;
wire    transposeMatrix_U0_B_we1;
wire   [31:0] transposeMatrix_U0_B_d1;
wire    Loop_VITIS_LOOP_35_1_proc_U0_ap_start;
wire    Loop_VITIS_LOOP_35_1_proc_U0_ap_done;
wire    Loop_VITIS_LOOP_35_1_proc_U0_ap_continue;
wire    Loop_VITIS_LOOP_35_1_proc_U0_ap_idle;
wire    Loop_VITIS_LOOP_35_1_proc_U0_ap_ready;
wire   [7:0] Loop_VITIS_LOOP_35_1_proc_U0_A_address0;
wire    Loop_VITIS_LOOP_35_1_proc_U0_A_ce0;
wire    Loop_VITIS_LOOP_35_1_proc_U0_A_we0;
wire   [31:0] Loop_VITIS_LOOP_35_1_proc_U0_A_d0;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_transposeMatrix_U0_ap_ready;
wire    ap_sync_transposeMatrix_U0_ap_ready;
reg    ap_sync_reg_Loop_VITIS_LOOP_35_1_proc_U0_ap_ready;
wire    ap_sync_Loop_VITIS_LOOP_35_1_proc_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_transposeMatrix_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Loop_VITIS_LOOP_35_1_proc_U0_ap_ready = 1'b0;
end

mattrans_transposeMatrix transposeMatrix_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(transposeMatrix_U0_ap_start),
    .ap_done(transposeMatrix_U0_ap_done),
    .ap_continue(transposeMatrix_U0_ap_continue),
    .ap_ce(1'b1),
    .ap_idle(transposeMatrix_U0_ap_idle),
    .ap_ready(transposeMatrix_U0_ap_ready),
    .B_address0(transposeMatrix_U0_B_address0),
    .B_ce0(transposeMatrix_U0_B_ce0),
    .B_we0(transposeMatrix_U0_B_we0),
    .B_d0(transposeMatrix_U0_B_d0),
    .B_address1(transposeMatrix_U0_B_address1),
    .B_ce1(transposeMatrix_U0_B_ce1),
    .B_we1(transposeMatrix_U0_B_we1),
    .B_d1(transposeMatrix_U0_B_d1)
);

mattrans_Loop_VITIS_LOOP_35_1_proc Loop_VITIS_LOOP_35_1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_VITIS_LOOP_35_1_proc_U0_ap_start),
    .ap_done(Loop_VITIS_LOOP_35_1_proc_U0_ap_done),
    .ap_continue(Loop_VITIS_LOOP_35_1_proc_U0_ap_continue),
    .ap_idle(Loop_VITIS_LOOP_35_1_proc_U0_ap_idle),
    .ap_ready(Loop_VITIS_LOOP_35_1_proc_U0_ap_ready),
    .A_address0(Loop_VITIS_LOOP_35_1_proc_U0_A_address0),
    .A_ce0(Loop_VITIS_LOOP_35_1_proc_U0_A_ce0),
    .A_we0(Loop_VITIS_LOOP_35_1_proc_U0_A_we0),
    .A_d0(Loop_VITIS_LOOP_35_1_proc_U0_A_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Loop_VITIS_LOOP_35_1_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Loop_VITIS_LOOP_35_1_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Loop_VITIS_LOOP_35_1_proc_U0_ap_ready <= ap_sync_Loop_VITIS_LOOP_35_1_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_transposeMatrix_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_transposeMatrix_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_transposeMatrix_U0_ap_ready <= ap_sync_transposeMatrix_U0_ap_ready;
        end
    end
end

assign A_address0 = Loop_VITIS_LOOP_35_1_proc_U0_A_address0;

assign A_address1 = 8'd0;

assign A_ce0 = Loop_VITIS_LOOP_35_1_proc_U0_A_ce0;

assign A_ce1 = 1'b0;

assign A_d0 = Loop_VITIS_LOOP_35_1_proc_U0_A_d0;

assign A_d1 = 32'd0;

assign A_we0 = Loop_VITIS_LOOP_35_1_proc_U0_A_we0;

assign A_we1 = 1'b0;

assign B_address0 = transposeMatrix_U0_B_address0;

assign B_address1 = transposeMatrix_U0_B_address1;

assign B_ce0 = transposeMatrix_U0_B_ce0;

assign B_ce1 = transposeMatrix_U0_B_ce1;

assign B_d0 = transposeMatrix_U0_B_d0;

assign B_d1 = transposeMatrix_U0_B_d1;

assign B_we0 = transposeMatrix_U0_B_we0;

assign B_we1 = transposeMatrix_U0_B_we1;

assign Loop_VITIS_LOOP_35_1_proc_U0_ap_continue = ap_sync_done;

assign Loop_VITIS_LOOP_35_1_proc_U0_ap_start = ((ap_sync_reg_Loop_VITIS_LOOP_35_1_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign ap_done = ap_sync_done;

assign ap_idle = (transposeMatrix_U0_ap_idle & Loop_VITIS_LOOP_35_1_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_Loop_VITIS_LOOP_35_1_proc_U0_ap_ready = (ap_sync_reg_Loop_VITIS_LOOP_35_1_proc_U0_ap_ready | Loop_VITIS_LOOP_35_1_proc_U0_ap_ready);

assign ap_sync_done = (transposeMatrix_U0_ap_done & Loop_VITIS_LOOP_35_1_proc_U0_ap_done);

assign ap_sync_ready = (ap_sync_transposeMatrix_U0_ap_ready & ap_sync_Loop_VITIS_LOOP_35_1_proc_U0_ap_ready);

assign ap_sync_transposeMatrix_U0_ap_ready = (transposeMatrix_U0_ap_ready | ap_sync_reg_transposeMatrix_U0_ap_ready);

assign transposeMatrix_U0_ap_continue = ap_sync_done;

assign transposeMatrix_U0_ap_start = ((ap_sync_reg_transposeMatrix_U0_ap_ready ^ 1'b1) & ap_start);

endmodule //mattrans
